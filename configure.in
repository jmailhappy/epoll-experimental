# initialize autoconf
AC_INIT([server], [0.0.1], [ondrej.holecek@firma.seznam.cz])
VERSION_INFO="-version-info 0:0:0"

# install autotools scripts to build-aux dir
AC_CONFIG_AUX_DIR([build-aux])

# initialize automake(use AC_INIT's arguments)
AM_INIT_AUTOMAKE(-Wall foreign)

# tell autoconf where to find sources
AC_CONFIG_SRCDIR([src/main.cc])

dnl This forces debian autoconf to use version 2.53
AC_PREREQ(2.50)

# whoa?
AC_CONFIG_MACRO_DIR([m4])

# disable so
AC_DISABLE_SHARED

# initialize libtool
AC_PROG_LIBTOOL

# replace autotools original defaults
CXXFLAGS=""
CFLAGS=""

# Add a test for a compiler.
AC_PROG_CC
AC_PROG_CXX

AC_ARG_ENABLE(package-version,[  --enable-package-version=version specify package version],[
    case "${enableval}" in
        yes)
            AC_MSG_ERROR([You must specify package version.])
        ;;
        no)
            AC_MSG_NOTICE([disabling Debian package version.])
        ;;
        *)
            AC_MSG_NOTICE([setting Debian package to "${enableval}."])
            CPPFLAGS="${CPPFLAGS} -DDEBIAN_PACKAGE_VERSION=\"\\\"${enableval}\\\"\""
        ;;
    esac
])

AC_ARG_ENABLE(optimization, [--enable-optimization compile optimized without debug logging], [
    case "${enableval}" in
        no)
            AC_MSG_NOTICE([disabling optimization.])
            CPPFLAGS="-O0 -g -ggdb"
        ;;
        yes)
            AC_MSG_NOTICE([enabling optimization.])
            CPPFLAGS="${CPPFLAGS} -O2 -g -ggdb"
        ;;
        *)
            AC_MSG_ERROR([Say yes or no to --enable-optimization.])
        ;;
    esac
], [
   CPPFLAGS="${CPPFLAGS} -O0 -g -ggdb"
])

AC_ARG_ENABLE([debug], [AS_HELP_STRING([--enable-debug], [Enable the debuging logging])],
                       [case "${enableval}" in
                            no)
                                AC_MSG_NOTICE([disabling debug log.])
                                CPPFLAGS="${CPPFLAGS} -UDEBUG"
                                ;;
                            yes)
                                AC_MSG_NOTICE([enabling debug log.])
                                CPPFLAGS="${CPPFLAGS} -DDEBUG=1"
                                ;;
                            *)
                                AC_MSG_ERROR([Say yes or no to --enable-debug.])
                                ;;
                        esac
],
                       [AS_IF([test x$enable_optimization == xyes],
                              [CPPFLAGS="${CPPFLAGS} -UDEBUG"],
                              [CPPFLAGS="${CPPFLAGS} -DDEBUG=1"])])

SVN_REVISION="`svnversion -n $srcdir`"

# check for serr

# check for boost program options
AC_LANG_CPLUSPLUS
AC_CHECK_HEADER([boost/program_options.hpp], [], AC_MSG_ERROR([boost program options headers missing], 1))
AC_CHECK_LIB(boost_program_options-mt, main, BOOST_PROGRAM_OPTIONS=-lboost_program_options-mt, [
    AC_CHECK_LIB(boost_program_options, main, BOOST_PROGRAM_OPTIONS=-lboost_program_options, [
        AC_MSG_ERROR([boost program_options library missing], 1)])])

AC_SUBST(SVN_REVISION)
AC_SUBST(VERSION_INFO)
AC_SUBST(BOOST_PROGRAM_OPTIONS)

# Write config.status and the Makefile
AC_CONFIG_FILES([Makefile src/Makefile ])

AC_OUTPUT()

